/*
 * This file is generated by jOOQ.
 */
package hackathon.generation.tool.model.tables.pojos;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForeignKeysView implements Serializable {

    private static final long serialVersionUID = 1L;

    private String tableSchema;
    private String constraintName;
    private String tableName;
    private String columnName;
    private String foreignTableSchema;
    private String foreignTableName;
    private String foreignColumnName;

    public ForeignKeysView() {}

    public ForeignKeysView(ForeignKeysView value) {
        this.tableSchema = value.tableSchema;
        this.constraintName = value.constraintName;
        this.tableName = value.tableName;
        this.columnName = value.columnName;
        this.foreignTableSchema = value.foreignTableSchema;
        this.foreignTableName = value.foreignTableName;
        this.foreignColumnName = value.foreignColumnName;
    }

    public ForeignKeysView(
        String tableSchema,
        String constraintName,
        String tableName,
        String columnName,
        String foreignTableSchema,
        String foreignTableName,
        String foreignColumnName
    ) {
        this.tableSchema = tableSchema;
        this.constraintName = constraintName;
        this.tableName = tableName;
        this.columnName = columnName;
        this.foreignTableSchema = foreignTableSchema;
        this.foreignTableName = foreignTableName;
        this.foreignColumnName = foreignColumnName;
    }

    /**
     * Getter for <code>public.foreign_keys_view.table_schema</code>.
     */
    public String getTableSchema() {
        return this.tableSchema;
    }

    /**
     * Setter for <code>public.foreign_keys_view.table_schema</code>.
     */
    public void setTableSchema(String tableSchema) {
        this.tableSchema = tableSchema;
    }

    /**
     * Getter for <code>public.foreign_keys_view.constraint_name</code>.
     */
    public String getConstraintName() {
        return this.constraintName;
    }

    /**
     * Setter for <code>public.foreign_keys_view.constraint_name</code>.
     */
    public void setConstraintName(String constraintName) {
        this.constraintName = constraintName;
    }

    /**
     * Getter for <code>public.foreign_keys_view.table_name</code>.
     */
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Setter for <code>public.foreign_keys_view.table_name</code>.
     */
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    /**
     * Getter for <code>public.foreign_keys_view.column_name</code>.
     */
    public String getColumnName() {
        return this.columnName;
    }

    /**
     * Setter for <code>public.foreign_keys_view.column_name</code>.
     */
    public void setColumnName(String columnName) {
        this.columnName = columnName;
    }

    /**
     * Getter for <code>public.foreign_keys_view.foreign_table_schema</code>.
     */
    public String getForeignTableSchema() {
        return this.foreignTableSchema;
    }

    /**
     * Setter for <code>public.foreign_keys_view.foreign_table_schema</code>.
     */
    public void setForeignTableSchema(String foreignTableSchema) {
        this.foreignTableSchema = foreignTableSchema;
    }

    /**
     * Getter for <code>public.foreign_keys_view.foreign_table_name</code>.
     */
    public String getForeignTableName() {
        return this.foreignTableName;
    }

    /**
     * Setter for <code>public.foreign_keys_view.foreign_table_name</code>.
     */
    public void setForeignTableName(String foreignTableName) {
        this.foreignTableName = foreignTableName;
    }

    /**
     * Getter for <code>public.foreign_keys_view.foreign_column_name</code>.
     */
    public String getForeignColumnName() {
        return this.foreignColumnName;
    }

    /**
     * Setter for <code>public.foreign_keys_view.foreign_column_name</code>.
     */
    public void setForeignColumnName(String foreignColumnName) {
        this.foreignColumnName = foreignColumnName;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ForeignKeysView (");

        sb.append(tableSchema);
        sb.append(", ").append(constraintName);
        sb.append(", ").append(tableName);
        sb.append(", ").append(columnName);
        sb.append(", ").append(foreignTableSchema);
        sb.append(", ").append(foreignTableName);
        sb.append(", ").append(foreignColumnName);

        sb.append(")");
        return sb.toString();
    }
}
